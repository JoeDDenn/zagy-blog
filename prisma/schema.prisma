// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// the id is not default anymore because it will be from github
model User {
  id String @id
  handle String
  image String
  createdAt DateTime @default(now())
  posts contributorsOnPosts[]
}
model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String @db.VarChar(255)
  description String
  bannerUrl String
  githubPath String
  keyWords String[]
  code String
  contributors contributorsOnPosts[]
  tags TagsOnPosts[]
}

model contributorsOnPosts {
  post Post @relation(fields: [postId], references: [id])
  postId String
  contributor User @relation(fields: [contributorId], references: [id])
  contributorId String
  isAuthor Boolean
  @@id([postId, contributorId, isAuthor])
}

model Tag {
  id String @id @default(uuid())
  name String @unique
  createdAt DateTime @default(now())
  posts TagsOnPosts[]
}
model TagsOnPosts {
  post Post @relation(fields: [postId], references: [id])
  postId String
  tag Tag @relation(fields: [tagId], references: [id])
  tagId String
  @@id([postId, tagId])
}
enum Role {
  USER
  ADMIN
}
